{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment as env } from '../../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StockExchangeService = /*#__PURE__*/(() => {\n  class StockExchangeService {\n    constructor(http) {\n      this.http = http;\n    } // ----------------------------------------- < Home Stock Exchanges > ----------------------------------------------- //\n\n\n    GetStockExchange(section_id) {\n      return this.http.get(`${env.ApiUrl}/localstock/local-stock-sections?section_id=${section_id}&search=`);\n    }\n\n    GetStockExchangeV2(section_id, sort, search) {\n      return this.http.get(`${env.ApiUrl}/localstock/local-stock-sections?section_id=${section_id}&search=${search}&sort=${sort}`).pipe(map(res => {\n        var _a, _b, _c, _d, _e;\n\n        const data = {\n          banners: (_a = res.data) === null || _a === void 0 ? void 0 : _a.banners,\n          logos: (_b = res.data) === null || _b === void 0 ? void 0 : _b.logos,\n          sectors: (_c = res.data) === null || _c === void 0 ? void 0 : _c.sectors,\n          sub_sections: (_e = (_d = res.data) === null || _d === void 0 ? void 0 : _d.fod_sections) === null || _e === void 0 ? void 0 : _e.concat(res.data.sub_sections)\n        };\n        return data;\n      }));\n    }\n\n    Filter_list(section_id) {\n      return this.http.get(`${env.ApiUrl}/localstock/all-local-stock-sections?section_id=${section_id}`);\n    } // ----------------------------------------- < Local Stock and Fodder Sub > -----------------------------------------------//\n\n\n    LocalStockandFodderSub(id, type, date) {\n      return this.http.get(`${env.ApiUrl}/localstock/new-local-stock-show-sub-section?id=${id}&type=${type}&date=${date}`);\n    }\n\n    newLocalStockandFodderSub(id, type, data) {\n      return this.http.get(`${env.ApiUrl}/localstock/new-local-stock-show-sub-section?id=${id}&type=${type}&date=${data}`);\n    }\n\n    FilterListItemSub(type, type_stock, id) {\n      return this.http.get(`${env.ApiUrl}/localstock/filter-stock-show-sub-section?id=${id}id&type=${type}&type_stock=${type_stock}`);\n    }\n\n    feeds_items(stock_id) {\n      return this.http.get(`${env.ApiUrl}/localstock/feeds-items?stock_id=${stock_id}&device=web`);\n    }\n\n    companies_items(stock_id, company_id) {\n      return this.http.get(`${env.ApiUrl}/localstock/companies-items?stock_id=${stock_id}&company_id=${company_id}`);\n    }\n\n    fodder(id, data, fod_id, comp_id) {\n      return this.http.get(`${env.ApiUrl}/v2/fodder/tables?id=${id}&date=${data}&fod_id=${fod_id}&comp_id=${comp_id}`);\n    }\n\n    local(id, data) {\n      return this.http.get(`${env.ApiUrl}/v2/local/tables?id=${id}&date=${data}`);\n    }\n\n    Filter_list_sub(id, type, type_stock) {\n      // return this.http.get<ApiResponse<FilterListSub>>(`${env.ApiUrl}/localstock/filter-stock-show-sub-section?id=1&type=poultry&type_stock=fodder`);\n      return this.http.get(`${env.ApiUrl}/localstock/filter-stock-show-sub-section?id=${id}&section_id=${type}&type_stock=${type_stock}`);\n    } // ----------------------------------------- < ComprisonFodder > -----------------------------------------------//\n\n\n    ComprisonFodderGetData(body) {\n      return this.http.post(`${env.ApiUrl}/localstock/comprison-fodder?id=1`, body);\n    }\n\n    ComprisonFodder(id) {\n      return this.http.get(`${env.ApiUrl}/localstock/comprison-fodder?id=${id}`);\n    }\n\n    compare(body) {\n      return this.http.post(`${env.ApiUrl}/localstock/comprison-fodder-get`, body);\n    }\n\n  }\n\n  StockExchangeService.ɵfac = function StockExchangeService_Factory(t) {\n    return new (t || StockExchangeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  StockExchangeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StockExchangeService,\n    factory: StockExchangeService.ɵfac,\n    providedIn: 'root'\n  });\n  return StockExchangeService;\n})();","map":null,"metadata":{},"sourceType":"module"}