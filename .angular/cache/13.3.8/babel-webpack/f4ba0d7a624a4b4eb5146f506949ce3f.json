{"ast":null,"code":"import { Image } from '@ks89/angular-modal-gallery';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@bmangesh/angular-image-gallery-view\";\n\nconst _c0 = function () {\n  return {\n    maxWidth: \"800px\",\n    maxHeight: \"500px\",\n    showArrows: true,\n    objectFit: \"cover\",\n    keyboardEnable: true,\n    modalGalleryEnable: false,\n    legacyIE11Mode: false\n  };\n};\n\nconst _c1 = function () {\n  return {\n    xSmall: 50,\n    small: 60,\n    medium: 70,\n    large: 80,\n    xLarge: 100\n  };\n};\n\nconst _c2 = function (a1) {\n  return {\n    visible: true,\n    breakpoints: a1\n  };\n};\n\nfunction GalleryCarouelComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"section\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelement(3, \"ks-carousel\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", 118)(\"images\", ctx_r0.imagesRect)(\"carouselConfig\", i0.ɵɵpureFunction0(4, _c0))(\"previewConfig\", i0.ɵɵpureFunction1(6, _c2, i0.ɵɵpureFunction0(5, _c1)));\n  }\n}\n\nexport let GalleryCarouelComponent = /*#__PURE__*/(() => {\n  class GalleryCarouelComponent {\n    constructor() {\n      this.imageIndex = 1;\n      this.galleryId = 1;\n      this.autoPlay = true;\n      this.showArrows = true;\n      this.showDots = true;\n      this.imagesRect = [];\n      this.accessibilityConfig = {\n        backgroundAriaLabel: 'CUSTOM Modal gallery full screen background',\n        backgroundTitle: 'CUSTOM background title',\n        plainGalleryContentAriaLabel: 'CUSTOM Plain gallery content',\n        plainGalleryContentTitle: 'CUSTOM plain gallery content title',\n        modalGalleryContentAriaLabel: 'CUSTOM Modal gallery content',\n        modalGalleryContentTitle: 'CUSTOM modal gallery content title',\n        loadingSpinnerAriaLabel: 'CUSTOM The current image is loading. Please be patient.',\n        loadingSpinnerTitle: 'CUSTOM The current image is loading. Please be patient.',\n        mainContainerAriaLabel: 'CUSTOM Current image and navigation',\n        mainContainerTitle: 'CUSTOM main container title',\n        mainPrevImageAriaLabel: 'CUSTOM Previous image',\n        mainPrevImageTitle: 'CUSTOM Previous image',\n        mainNextImageAriaLabel: 'CUSTOM Next image',\n        mainNextImageTitle: 'CUSTOM Next image',\n        dotsContainerAriaLabel: 'CUSTOM Image navigation dots',\n        dotsContainerTitle: 'CUSTOM dots container title',\n        dotAriaLabel: 'CUSTOM Navigate to image number',\n        previewsContainerAriaLabel: 'CUSTOM Image previews',\n        previewsContainerTitle: 'CUSTOM previews title',\n        previewScrollPrevAriaLabel: 'CUSTOM Scroll previous previews',\n        previewScrollPrevTitle: 'CUSTOM Scroll previous previews',\n        previewScrollNextAriaLabel: 'CUSTOM Scroll next previews',\n        previewScrollNextTitle: 'CUSTOM Scroll next previews',\n        carouselContainerAriaLabel: 'Current image and navigation',\n        carouselContainerTitle: '',\n        carouselPrevImageAriaLabel: 'Previous image',\n        carouselPrevImageTitle: 'Previous image',\n        carouselNextImageAriaLabel: 'Next image',\n        carouselNextImageTitle: 'Next image',\n        carouselPreviewsContainerAriaLabel: 'Image previews',\n        carouselPreviewsContainerTitle: '',\n        carouselPreviewScrollPrevAriaLabel: 'Scroll previous previews',\n        carouselPreviewScrollPrevTitle: 'Scroll previous previews',\n        carouselPreviewScrollNextAriaLabel: 'Scroll next previews',\n        carouselPreviewScrollNextTitle: 'Scroll next previews'\n      };\n    }\n\n    ngOnChanges(changes) {//  console.log( changes['images'].currentValue)   \n    }\n\n    ngOnInit() {\n      for (let i = 0; i < this.images.length; i++) {\n        this.imagesRect.push(new Image(i, {\n          img: this.images[i].image\n        }, {\n          img: this.images[i].image\n        })); // console.log(this.images![i].image)\n      } // console.log(this.images)\n\n    }\n\n    addRandomImage() {\n      const imageToCopy = this.imagesRect[Math.floor(Math.random() * this.imagesRect.length)];\n      const newImage = new Image(this.imagesRect.length - 1 + 1, imageToCopy.modal, imageToCopy.plain);\n      this.imagesRect = [...this.imagesRect, newImage];\n    }\n\n    onChangeAutoPlay() {\n      this.autoPlay = !this.autoPlay;\n    }\n\n    onChangeShowArrows() {\n      this.showArrows = !this.showArrows;\n    }\n\n    onChangeShowDots() {\n      this.showDots = !this.showDots;\n    } // output evets\n\n\n    onShow(event) {\n      console.log('show', event);\n    }\n\n    onFirstImage(event) {\n      console.log('firstImage', event);\n    }\n\n    onLastImage(event) {\n      console.log('lastImage', event);\n    }\n\n  }\n\n  GalleryCarouelComponent.ɵfac = function GalleryCarouelComponent_Factory(t) {\n    return new (t || GalleryCarouelComponent)();\n  };\n\n  GalleryCarouelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GalleryCarouelComponent,\n    selectors: [[\"app-gallery-carouel\"]],\n    inputs: {\n      images: \"images\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"id\", \"images\", \"carouselConfig\", \"previewConfig\"]],\n    template: function GalleryCarouelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GalleryCarouelComponent_div_0_Template, 6, 8, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.images);\n      }\n    },\n    directives: [i1.NgIf, i2.ɵe],\n    styles: [\".inside preview-image .ng-star-inserted{margin:10px}.preview-image{margin:10px;width:5100px!important}.preview-image{margin:10px}.preview-image.active{margin:10px;border:solid #FFBB33 4px}#current-image{border-radius:20px}.dots-container .dot{background:#0C6A22!important}.dots-container .dot.active{background:#FFBB33!important}.right-arrow-image,.left-arrow-image{border-radius:50%;width:40px;height:40px;background-position:9px;background-repeat:no-repeat;margin:auto}.preview-inner-container{overflow-x:hidden;width:10%}.preview-inner-container img{max-width:150px!important;border-radius:20px}\\n\"],\n    encapsulation: 2\n  });\n  return GalleryCarouelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}