{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment as env } from '../../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MarketService = /*#__PURE__*/(() => {\n  class MarketService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    market(section_id, sort, search, date, page) {\n      // const headers= new HttpHeaders()\n      // .set('android', '')\n      return this.http.get(`${env.ApiUrl}/store/ads-store?section_id=${section_id}&sort=${sort}&search=${search}&date=${date}&page=${page}`);\n    }\n\n    Filter_list(section_id) {\n      return this.http.get(`${env.ApiUrl}/store/ads-store-sections?section_id=${section_id}`);\n    } // ----------------------------------------- < AD endPoints > -----------------------------------------------//\n\n\n    ad_details(id) {\n      return this.http.get(`${env.ApiUrl}/store/ads-store-detials?id=${id}`);\n    }\n\n    get_ad(id) {\n      return this.http.get(`${env.ApiUrl}/store/get-ads-store-to-edit?id=${id}`);\n    }\n\n    add_ad(formData) {\n      return this.http.post(`${env.ApiUrl}/store/add-ads-store`, formData);\n    }\n\n    edit_ad(formData) {\n      return this.http.post(`${env.ApiUrl}/store/update-ads-store`, formData);\n    }\n\n    delete_ad(id) {\n      return this.http.get(`${env.ApiUrl}/store/delete-ads-store?id=${id}`);\n    }\n\n    my_ads(type) {\n      const headers = new HttpHeaders().set('android', '');\n      return this.http.get(`${env.ApiUrl}/store/my-ads-store?section_id=${type}`, {\n        'headers': headers\n      });\n    } // ----------------------------------------- < Chat endPoints > -----------------------------------------------//\n\n\n    start_chat(id) {\n      return this.http.get(`${env.ApiUrl}/store/start-chat?id=${id}`);\n    }\n\n    chat_massages(id) {\n      return this.http.get(`${env.ApiUrl}/store/chats-massages?id=${id}`);\n    }\n\n    add_massage(formData) {\n      return this.http.post(`${env.ApiUrl}/store/add-massages`, formData);\n    }\n\n    chats() {\n      return this.http.get(`${env.ApiUrl}/store/chats`);\n    }\n\n  }\n\n  MarketService.ɵfac = function MarketService_Factory(t) {\n    return new (t || MarketService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MarketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketService,\n    factory: MarketService.ɵfac,\n    providedIn: 'root'\n  });\n  return MarketService;\n})();","map":null,"metadata":{},"sourceType":"module"}