{"ast":null,"code":"import { FormatDate } from '@app/@shared/classes/formatDate';\nimport { catchError, EMPTY } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/@core/services/modules/stock-exchange/stock-exchange.service\";\nimport * as i2 from \"@angular/router\"; // import { FeedsItems } from '../data/local-stock-fodder-sub';\n\nexport let LocalStockLocalAndFodder = /*#__PURE__*/(() => {\n  class LocalStockLocalAndFodder {\n    constructor(stock, router) {\n      this.stock = stock;\n      this.router = router;\n      this.today = new FormatDate().shortDate(Date());\n    }\n\n    resolve(route, state) {\n      let stock_type = 'local';\n\n      if (route.paramMap.get('type_stock') === 'المحلية') {\n        stock_type = 'local';\n      } else if (route.paramMap.get('type_stock') === 'الأعلاف') {\n        stock_type = 'fodder';\n      }\n\n      if (stock_type === 'fodder') {\n        return this.stock.fodder(route.paramMap.get('id') || '', this.today, '', '').pipe(catchError(() => {\n          this.router.navigate([\"\"]);\n          return EMPTY;\n        }));\n      } else {\n        return this.stock.local(route.paramMap.get('id') || '', this.today).pipe(catchError(() => {\n          this.router.navigate([\"\"]);\n          return EMPTY;\n        }));\n      }\n    }\n\n  }\n\n  LocalStockLocalAndFodder.ɵfac = function LocalStockLocalAndFodder_Factory(t) {\n    return new (t || LocalStockLocalAndFodder)(i0.ɵɵinject(i1.StockExchangeService), i0.ɵɵinject(i2.Router));\n  };\n\n  LocalStockLocalAndFodder.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStockLocalAndFodder,\n    factory: LocalStockLocalAndFodder.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStockLocalAndFodder;\n})();","map":null,"metadata":{},"sourceType":"module"}