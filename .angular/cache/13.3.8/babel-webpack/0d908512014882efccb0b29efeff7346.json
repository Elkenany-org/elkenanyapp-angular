{"ast":null,"code":"import { environment as env } from '../../../../../environments/environment';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; // return this.http.get<ApiResponse<CompaniesHome>>(`${env.ApiUrl}/guide/section/?type=poultry`)  }  origin error\n\nexport let CompaniesGuideService = /*#__PURE__*/(() => {\n  class CompaniesGuideService {\n    constructor(http) {\n      this.http = http;\n    } // ----------------------------------------- < Companies Home > -----------------------------------------------//\n\n\n    CompaniesHome(section_id, sort, search) {\n      return this.http.get(`${env.ApiUrl}/guide/section?section_id=${section_id}&sort=${sort}&search=${search}`).pipe(map(res => {\n        var _a, _b, _c, _d;\n\n        const data = {\n          banners: (_a = res.data) === null || _a === void 0 ? void 0 : _a.banners,\n          logos: (_b = res.data) === null || _b === void 0 ? void 0 : _b.logos,\n          sectors: (_c = res.data) === null || _c === void 0 ? void 0 : _c.sectors,\n          sub_sections: (_d = res.data) === null || _d === void 0 ? void 0 : _d.sub_sections\n        };\n        return data;\n      }));\n    }\n\n    Filter_list(section_id) {\n      return this.http.get(`${env.ApiUrl}/guide/all-filter-guide-sub-sections?section_id=${section_id}`);\n    } // ----------------------------------------- < Companies  > -----------------------------------------------//\n\n\n    Companies(section_id, sub_id, country_id, city_id, sort, search, page) {\n      return this.http.get(`${env.ApiUrl}/guide/sub-section?section_id=2&sub_id=2`); // (`${env.ApiUrl}/guide/sub-section?section_id=${section_id}&sub_id=${sub_id}&country_id=${country_id}&city_id=${city_id}&sort=${sort}&search=${search}&page=${page}`)\n    }\n\n    Companiesv2(params) {\n      return this.http.get(`${env.ApiUrl}/guide/sub-section?section_id=${params.section_id}&sub_id=${params.sub_id}&country_id=${params.country_id}&city_id=${params.city_id}&sort=${params.sort}&search=${params.search}&page=${params.page}`);\n    }\n\n    co_Filter_list(sector_id) {\n      return this.http.get(`${env.ApiUrl}/guide/filter-guide-companies?sector_id=${sector_id}&country_id=1`);\n    }\n\n    co_Filter_listV2(section_id, country_id) {\n      return this.http.get(`${env.ApiUrl}/guide/filter-guide-companies?section_id=${section_id}&country_id=${country_id}`);\n    } // ----------------------------------------- < Company > -----------------------------------------------//\n\n\n    comapny(id) {\n      return this.http.get(`${env.ApiUrl}/guide/company?id=${id}`);\n    } // ----------------------------------------- < Rate > -----------------------------------------------//\n\n\n    rate(body) {\n      return this.http.post(`${env.ApiUrl}/guide/rating-company`, body);\n    }\n\n  }\n\n  CompaniesGuideService.ɵfac = function CompaniesGuideService_Factory(t) {\n    return new (t || CompaniesGuideService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CompaniesGuideService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompaniesGuideService,\n    factory: CompaniesGuideService.ɵfac,\n    providedIn: 'root'\n  });\n  return CompaniesGuideService;\n})();","map":null,"metadata":{},"sourceType":"module"}