{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Optional, Inject, Injectable, PLATFORM_ID, Directive, Host, Self, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/platform-browser';\nimport * as i1$1 from 'ng-gallery';\nimport { ImageItem, GalleryModule } from 'ng-gallery';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, from, EMPTY, Subscription, fromEvent } from 'rxjs';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { debounceTime, switchMap, map, tap, finalize } from 'rxjs/operators';\n\nconst _c0 = function (a0, a1) {\n  return {\n    startAnimationTime: a0,\n    exitAnimationTime: a1\n  };\n};\n\nconst _c1 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst LIGHTBOX_CONFIG = new InjectionToken('LIGHTBOX_CONFIG');\nconst lightboxAnimation = trigger('lightbox', [state('void, exit', style({\n  opacity: 0,\n  transform: 'scale(0.7)'\n})), state('enter', style({\n  transform: 'none'\n})), transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', style({\n  transform: 'none',\n  opacity: 1\n}))), transition('* => void, * => exit', animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({\n  opacity: 0\n})))]);\n\nclass LightboxComponent {\n  constructor(_document, _focusTrapFactory, _elementRef, sanitizer) {\n    this._document = _document;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._elementRef = _elementRef;\n    this.sanitizer = sanitizer;\n    /** State of the lightbox animation. */\n\n    this.state = 'enter';\n\n    this._savePreviouslyFocusedElement();\n  }\n  /** Callback, invoked whenever an animation on the host completes. */\n\n\n  onAnimationDone(event) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else {\n      this.overlayRef.dispose();\n\n      this._restoreFocus();\n    }\n  }\n  /** Moves the focus inside the focus trap. */\n\n\n  _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    } // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n\n\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\n\n\n  _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement; // Note that there is no focus method when rendering on the server.\n\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n  /** Restores focus to the element that was focused before the lightbox opened. */\n\n\n  _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened; // We need the extra check, because IE can set the `activeElement` to null in some cases.\n\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n}\n\nLightboxComponent.ɵfac = function LightboxComponent_Factory(t) {\n  return new (t || LightboxComponent)(i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i1.ConfigurableFocusTrapFactory), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\n\nLightboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LightboxComponent,\n  selectors: [[\"lightbox\"]],\n  hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\"],\n  hostVars: 12,\n  hostBindings: function LightboxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@lightbox.done\", function LightboxComponent_animation_lightbox_done_HostBindingHandler($event) {\n        return ctx.onAnimationDone($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", \"lightbox-\" + ctx.id)(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabel ? null : ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx.ariaDescribedBy || null);\n      i0.ɵɵsyntheticHostProperty(\"@lightbox\", i0.ɵɵpureFunction2(9, _c1, ctx.state, i0.ɵɵpureFunction2(6, _c0, ctx.startAnimationTime, ctx.exitAnimationTime)));\n    }\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"id\", \"destroyRef\", \"skipInitConfig\"], [\"aria-label\", \"Close\", 1, \"g-btn-close\", 3, \"innerHTML\", \"click\"]],\n  template: function LightboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"gallery\", 0);\n      i0.ɵɵelementStart(1, \"i\", 1);\n      i0.ɵɵlistener(\"click\", function LightboxComponent_Template_i_click_1_listener() {\n        return ctx.overlayRef.detach();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.id)(\"destroyRef\", false)(\"skipInitConfig\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.sanitizer.bypassSecurityTrustHtml(ctx.closeIcon), i0.ɵɵsanitizeHtml);\n    }\n  },\n  directives: [i1$1.GalleryComponent],\n  styles: [\"lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}  lightbox:focus{outline:none}  lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}  .g-backdrop{background-color:#00000052}  .fullscreen{width:100%}  .fullscreen   lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}  .g-overlay{margin:auto}@media only screen and (max-width: 480px){  .g-overlay{width:100%}  .g-overlay   lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}  .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){  .g-btn-close{right:.7em;top:.7em}}\"],\n  data: {\n    animation: [lightboxAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lightbox',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [lightboxAnimation],\n      template: `\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\n    </gallery>\n  `,\n      host: {\n        'tabindex': '-1',\n        'aria-modal': 'true',\n        '[attr.id]': '\"lightbox-\" + id',\n        '[attr.role]': 'role',\n        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-describedby]': 'ariaDescribedBy || null',\n        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\n        '(@lightbox.done)': 'onAnimationDone($event)'\n      },\n      styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.ConfigurableFocusTrapFactory\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.DomSanitizer\n    }];\n  }, null);\n})();\n\nconst defaultConfig = {\n  backdropClass: 'g-backdrop',\n  panelClass: 'g-overlay',\n  hasBackdrop: true,\n  keyboardShortcuts: true,\n  role: 'lightbox',\n  startAnimationTime: 150,\n  exitAnimationTime: 75,\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\n</svg>\n`\n};\n\nclass Lightbox {\n  constructor(config, _gallery, _overlay) {\n    this._gallery = _gallery;\n    this._overlay = _overlay;\n    /** Stream that emits when lightbox is opened */\n\n    this.opened = new Subject();\n    /** Stream that emits when lightbox is closed */\n\n    this.closed = new Subject();\n    this._config = config ? Object.assign(Object.assign({}, defaultConfig), config) : defaultConfig;\n  }\n  /**\r\n   * Set Lightbox Config\r\n   * @param config - LightboxConfig\r\n   */\n\n\n  setConfig(config) {\n    this._config = Object.assign(Object.assign({}, this._config), config);\n  }\n  /**\r\n   * Open Lightbox Overlay\r\n   * @param i - Current Index\r\n   * @param id - Gallery ID\r\n   * @param config - Lightbox Config\r\n   */\n\n\n  open(i = 0, id = 'lightbox', config) {\n    const _config = config ? Object.assign(Object.assign({}, this._config), config) : this._config;\n\n    const overlayConfig = {\n      backdropClass: _config.backdropClass,\n      panelClass: _config.panelClass,\n      hasBackdrop: _config.hasBackdrop,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      disposeOnNavigation: true\n    };\n\n    const galleryRef = this._gallery.ref(id);\n\n    galleryRef.set(i);\n    this._overlayRef = this._overlay.create(overlayConfig); // overlay opened event\n\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id)); // overlay closed event\n\n\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id)); // Attach gallery to the overlay\n\n\n    const galleryPortal = new ComponentPortal(LightboxComponent);\n\n    const lightboxRef = this._overlayRef.attach(galleryPortal);\n\n    lightboxRef.instance.id = id;\n    lightboxRef.instance.overlayRef = this._overlayRef;\n    lightboxRef.instance.closeIcon = this._config.closeIcon;\n    lightboxRef.instance.role = this._config.role;\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\n    lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\n    lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\n\n    if (_config.hasBackdrop) {\n      this._overlayRef.backdropClick().subscribe(() => this.close());\n    } // Add keyboard shortcuts\n\n\n    if (_config.keyboardShortcuts) {\n      this._overlayRef.keydownEvents().subscribe(event => {\n        switch (event.keyCode) {\n          case LEFT_ARROW:\n            galleryRef.prev();\n            break;\n\n          case RIGHT_ARROW:\n            galleryRef.next();\n            break;\n\n          case ESCAPE:\n            this.close();\n        }\n      });\n    }\n  }\n  /**\r\n   * Close Lightbox Overlay\r\n   */\n\n\n  close() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n  }\n\n}\n\nLightbox.ɵfac = function Lightbox_Factory(t) {\n  return new (t || Lightbox)(i0.ɵɵinject(LIGHTBOX_CONFIG, 8), i0.ɵɵinject(i1$1.Gallery), i0.ɵɵinject(i2$1.Overlay));\n};\n\nLightbox.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Lightbox,\n  factory: Lightbox.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Lightbox, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LIGHTBOX_CONFIG]\n      }]\n    }, {\n      type: i1$1.Gallery\n    }, {\n      type: i2$1.Overlay\n    }];\n  }, null);\n})();\n\nclass GallerizeDirective {\n  constructor(_zone, _el, _gallery, _lightbox, _renderer, platform, _document, _galleryCmp) {\n    this._zone = _zone;\n    this._el = _el;\n    this._gallery = _gallery;\n    this._lightbox = _lightbox;\n    this._renderer = _renderer;\n    this._document = _document;\n    this._galleryCmp = _galleryCmp;\n    /** Default gallery id */\n\n    this._galleryId = 'lightbox';\n    /** The selector used to query images elements */\n\n    this.selector = 'img'; // Set gallerize mode\n\n    if (isPlatformBrowser(platform)) {\n      this._mode = _galleryCmp ? \"gallery\"\n      /* Gallery */\n      : \"detector\"\n      /* Detector */\n      ;\n    }\n  }\n\n  ngOnInit() {\n    this._zone.runOutsideAngular(() => {\n      this._galleryId = this.gallerize || this._galleryId;\n\n      const ref = this._gallery.ref(this._galleryId);\n\n      switch (this._mode) {\n        case \"detector\"\n        /* Detector */\n        :\n          this.detectorMode(ref);\n          break;\n\n        case \"gallery\"\n        /* Gallery */\n        :\n          this.galleryMode(ref);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    switch (this._mode) {\n      case \"detector\"\n      /* Detector */\n      :\n        this._detector$.complete();\n\n        this._observer$.disconnect();\n\n        break;\n\n      case \"gallery\"\n      /* Gallery */\n      :\n        this._itemClick$.unsubscribe();\n\n        this._itemChange$.unsubscribe();\n\n    }\n  }\n  /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\r\n   * Adds a click event to each gallery item so it opens in lightbox */\n\n\n  galleryMode(galleryRef) {\n    // Clone its items to the new gallery instance\n    this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe(i => this._lightbox.open(i, this._galleryId));\n    this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe(state => galleryRef.load(state.items));\n  }\n  /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\r\n   *  Detects images and adds a click event to each image so it opens in the lightbox */\n\n\n  detectorMode(galleryRef) {\n    this._detector$ = new Subject(); // Query image elements\n\n    this._detector$.pipe(debounceTime(300), switchMap(() => {\n      /** get all img elements from content */\n      const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\n\n      if (imageElements && imageElements.length) {\n        const images = [];\n        return from(imageElements).pipe(map((el, i) => {\n          // Add click event to the image\n          this._renderer.setStyle(el, 'cursor', 'pointer');\n\n          this._renderer.setProperty(el, 'onclick', () => this._zone.run(() => this._lightbox.open(i, this._galleryId)));\n\n          if (el instanceof HTMLImageElement) {\n            // If element is type of img use the src property\n            return {\n              src: el.getAttribute('imageSrc') || el.src,\n              thumb: el.getAttribute('thumbSrc') || el.src\n            };\n          } else {\n            // Otherwise, use element background-image url\n            const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);\n\n            const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\n            return {\n              src: el.getAttribute('imageSrc') || background,\n              thumb: el.getAttribute('thumbSrc') || background\n            };\n          }\n        }), tap(data => images.push(new ImageItem(data))), finalize(() => galleryRef.load(images)));\n      } else {\n        return EMPTY;\n      }\n    })).subscribe(); // Observe content changes\n\n\n    this._observer$ = new MutationObserver(() => this._detector$.next());\n\n    this._observer$.observe(this._el.nativeElement, {\n      childList: true,\n      subtree: true\n    });\n  }\n\n}\n\nGallerizeDirective.ɵfac = function GallerizeDirective_Factory(t) {\n  return new (t || GallerizeDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Gallery), i0.ɵɵdirectiveInject(Lightbox), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1$1.GalleryComponent, 11));\n};\n\nGallerizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GallerizeDirective,\n  selectors: [[\"\", \"gallerize\", \"\"]],\n  inputs: {\n    gallerize: \"gallerize\",\n    selector: \"selector\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GallerizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[gallerize]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1$1.Gallery\n    }, {\n      type: Lightbox\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1$1.GalleryComponent,\n      decorators: [{\n        type: Host\n      }, {\n        type: Self\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    gallerize: [{\n      type: Input\n    }],\n    selector: [{\n      type: Input\n    }]\n  });\n})();\n\nclass LightboxDirective {\n  constructor(_lightbox, _el, _renderer) {\n    this._lightbox = _lightbox;\n    this._el = _el;\n    this._renderer = _renderer;\n    this.clickEvent = Subscription.EMPTY;\n    this.index = 0;\n    this.id = 'root';\n  }\n\n  ngOnInit() {\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\n\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(tap(() => this._lightbox.open(this.index, this.id))).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.clickEvent.unsubscribe();\n  }\n\n}\n\nLightboxDirective.ɵfac = function LightboxDirective_Factory(t) {\n  return new (t || LightboxDirective)(i0.ɵɵdirectiveInject(Lightbox), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nLightboxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LightboxDirective,\n  selectors: [[\"\", \"lightbox\", \"\"]],\n  inputs: {\n    index: [\"lightbox\", \"index\"],\n    id: [\"gallery\", \"id\"]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lightbox]'\n    }]\n  }], function () {\n    return [{\n      type: Lightbox\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: ['lightbox']\n    }],\n    id: [{\n      type: Input,\n      args: ['gallery']\n    }]\n  });\n})();\n\nclass LightboxModule {\n  static withConfig(config) {\n    return {\n      ngModule: LightboxModule,\n      providers: [{\n        provide: LIGHTBOX_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nLightboxModule.ɵfac = function LightboxModule_Factory(t) {\n  return new (t || LightboxModule)();\n};\n\nLightboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LightboxModule\n});\nLightboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [Lightbox],\n  imports: [[OverlayModule, GalleryModule, A11yModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, GalleryModule, A11yModule],\n      declarations: [LightboxComponent, LightboxDirective, GallerizeDirective],\n      exports: [LightboxDirective, GallerizeDirective],\n      providers: [Lightbox]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { GallerizeDirective, LIGHTBOX_CONFIG, Lightbox, LightboxComponent, LightboxDirective, LightboxModule };","map":{"version":3,"sources":["D:/elkenany_angular/Elkenany_V3/node_modules/ng-gallery/fesm2015/ng-gallery-lightbox.mjs"],"names":["i0","InjectionToken","Component","ChangeDetectionStrategy","Optional","Inject","Injectable","PLATFORM_ID","Directive","Host","Self","Input","NgModule","DOCUMENT","isPlatformBrowser","trigger","state","style","transition","animate","i1","A11yModule","i2","i1$1","ImageItem","GalleryModule","ComponentPortal","ESCAPE","RIGHT_ARROW","LEFT_ARROW","Subject","from","EMPTY","Subscription","fromEvent","i2$1","OverlayModule","debounceTime","switchMap","map","tap","finalize","LIGHTBOX_CONFIG","lightboxAnimation","opacity","transform","LightboxComponent","constructor","_document","_focusTrapFactory","_elementRef","sanitizer","_savePreviouslyFocusedElement","onAnimationDone","event","toState","_trapFocus","overlayRef","dispose","_restoreFocus","_focusTrap","create","nativeElement","focusInitialElementWhenReady","_elementFocusedBeforeDialogWasOpened","activeElement","focus","Promise","resolve","then","toFocus","destroy","ɵfac","ConfigurableFocusTrapFactory","ElementRef","DomSanitizer","ɵcmp","GalleryComponent","type","args","selector","changeDetection","OnPush","animations","template","host","styles","undefined","decorators","defaultConfig","backdropClass","panelClass","hasBackdrop","keyboardShortcuts","role","startAnimationTime","exitAnimationTime","closeIcon","Lightbox","config","_gallery","_overlay","opened","closed","_config","Object","assign","setConfig","open","i","id","overlayConfig","positionStrategy","position","global","centerHorizontally","centerVertically","scrollStrategy","scrollStrategies","block","disposeOnNavigation","galleryRef","ref","set","_overlayRef","attachments","subscribe","next","detachments","galleryPortal","lightboxRef","attach","instance","ariaLabel","ariaLabelledBy","ariaDescribedBy","backdropClick","close","keydownEvents","keyCode","prev","hasAttached","detach","Gallery","Overlay","ɵprov","GallerizeDirective","_zone","_el","_lightbox","_renderer","platform","_galleryCmp","_galleryId","_mode","ngOnInit","runOutsideAngular","gallerize","detectorMode","galleryMode","ngOnDestroy","_detector$","complete","_observer$","disconnect","_itemClick$","unsubscribe","_itemChange$","itemClick","itemsChanged","load","items","pipe","imageElements","querySelectorAll","length","images","el","setStyle","setProperty","run","HTMLImageElement","src","getAttribute","thumb","elStyle","currentStyle","defaultView","getComputedStyle","background","backgroundImage","slice","replace","data","push","MutationObserver","observe","childList","subtree","NgZone","Renderer2","ɵdir","LightboxDirective","clickEvent","index","LightboxModule","withConfig","ngModule","providers","provide","useValue","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Optional, Inject, Injectable, PLATFORM_ID, Directive, Host, Self, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/platform-browser';\nimport * as i1$1 from 'ng-gallery';\nimport { ImageItem, GalleryModule } from 'ng-gallery';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, from, EMPTY, Subscription, fromEvent } from 'rxjs';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { debounceTime, switchMap, map, tap, finalize } from 'rxjs/operators';\n\nconst LIGHTBOX_CONFIG = new InjectionToken('LIGHTBOX_CONFIG');\n\nconst lightboxAnimation = trigger('lightbox', [\r\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\r\n    state('enter', style({ transform: 'none' })),\r\n    transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\r\n    transition('* => void, * => exit', animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\r\n]);\n\nclass LightboxComponent {\r\n    constructor(_document, _focusTrapFactory, _elementRef, sanitizer) {\r\n        this._document = _document;\r\n        this._focusTrapFactory = _focusTrapFactory;\r\n        this._elementRef = _elementRef;\r\n        this.sanitizer = sanitizer;\r\n        /** State of the lightbox animation. */\r\n        this.state = 'enter';\r\n        this._savePreviouslyFocusedElement();\r\n    }\r\n    /** Callback, invoked whenever an animation on the host completes. */\r\n    onAnimationDone(event) {\r\n        if (event.toState === 'enter') {\r\n            this._trapFocus();\r\n        }\r\n        else {\r\n            this.overlayRef.dispose();\r\n            this._restoreFocus();\r\n        }\r\n    }\r\n    /** Moves the focus inside the focus trap. */\r\n    _trapFocus() {\r\n        if (!this._focusTrap) {\r\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\r\n        }\r\n        // If were to attempt to focus immediately, then the content of the lightbox would not yet be\r\n        // ready in instances where change detection has to run first. To deal with this, we simply\r\n        // wait for the microtask queue to be empty.\r\n        this._focusTrap.focusInitialElementWhenReady();\r\n    }\r\n    /** Saves a reference to the element that was focused before the lightbox was opened. */\r\n    _savePreviouslyFocusedElement() {\r\n        if (this._document) {\r\n            this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;\r\n            // Note that there is no focus method when rendering on the server.\r\n            if (this._elementRef.nativeElement.focus) {\r\n                // Move focus onto the lightbox immediately in order to prevent the user from accidentally\r\n                // opening multiple dialogs at the same time. Needs to be async, because the element\r\n                // may not be focusable immediately.\r\n                Promise.resolve().then(() => this._elementRef.nativeElement.focus());\r\n            }\r\n        }\r\n    }\r\n    /** Restores focus to the element that was focused before the lightbox opened. */\r\n    _restoreFocus() {\r\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\r\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n        if (toFocus && typeof toFocus.focus === 'function') {\r\n            toFocus.focus();\r\n        }\r\n        if (this._focusTrap) {\r\n            this._focusTrap.destroy();\r\n        }\r\n    }\r\n}\r\nLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxComponent, deps: [{ token: DOCUMENT, optional: true }, { token: i1.ConfigurableFocusTrapFactory }, { token: i0.ElementRef }, { token: i2.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });\r\nLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: LightboxComponent, selector: \"lightbox\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@lightbox.done\": \"onAnimationDone($event)\" }, properties: { \"attr.id\": \"\\\"lightbox-\\\" + id\", \"attr.role\": \"role\", \"attr.aria-labelledby\": \"ariaLabel ? null : ariaLabelledBy\", \"attr.aria-label\": \"ariaLabel\", \"attr.aria-describedby\": \"ariaDescribedBy || null\", \"@lightbox\": \"{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }\" } }, ngImport: i0, template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\r\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\r\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\r\n    </gallery>\r\n  `, isInline: true, styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\\n\"], components: [{ type: i1$1.GalleryComponent, selector: \"gallery\", inputs: [\"id\", \"items\", \"nav\", \"dots\", \"loop\", \"thumb\", \"zoomOut\", \"counter\", \"dotsSize\", \"autoPlay\", \"gestures\", \"thumbWidth\", \"thumbHeight\", \"disableThumb\", \"panSensitivity\", \"playerInterval\", \"itemTemplate\", \"thumbTemplate\", \"thumbMode\", \"imageSize\", \"dotsPosition\", \"counterPosition\", \"slidingDirection\", \"loadingStrategy\", \"thumbPosition\", \"thumbView\", \"destroyRef\", \"skipInitConfig\"], outputs: [\"itemClick\", \"thumbClick\", \"playingChange\", \"indexChange\", \"itemsChange\", \"error\"] }], animations: [lightboxAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'lightbox', changeDetection: ChangeDetectionStrategy.OnPush, animations: [lightboxAnimation], template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\r\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\r\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\r\n    </gallery>\r\n  `, host: {\r\n                        'tabindex': '-1',\r\n                        'aria-modal': 'true',\r\n                        '[attr.id]': '\"lightbox-\" + id',\r\n                        '[attr.role]': 'role',\r\n                        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\r\n                        '[attr.aria-label]': 'ariaLabel',\r\n                        '[attr.aria-describedby]': 'ariaDescribedBy || null',\r\n                        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\r\n                        '(@lightbox.done)': 'onAnimationDone($event)',\r\n                    }, styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\\n\"] }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: i1.ConfigurableFocusTrapFactory }, { type: i0.ElementRef }, { type: i2.DomSanitizer }];\r\n    } });\n\nconst defaultConfig = {\r\n    backdropClass: 'g-backdrop',\r\n    panelClass: 'g-overlay',\r\n    hasBackdrop: true,\r\n    keyboardShortcuts: true,\r\n    role: 'lightbox',\r\n    startAnimationTime: 150,\r\n    exitAnimationTime: 75,\r\n    closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\r\n</svg>\r\n`\r\n};\n\nclass Lightbox {\r\n    constructor(config, _gallery, _overlay) {\r\n        this._gallery = _gallery;\r\n        this._overlay = _overlay;\r\n        /** Stream that emits when lightbox is opened */\r\n        this.opened = new Subject();\r\n        /** Stream that emits when lightbox is closed */\r\n        this.closed = new Subject();\r\n        this._config = config ? Object.assign(Object.assign({}, defaultConfig), config) : defaultConfig;\r\n    }\r\n    /**\r\n     * Set Lightbox Config\r\n     * @param config - LightboxConfig\r\n     */\r\n    setConfig(config) {\r\n        this._config = Object.assign(Object.assign({}, this._config), config);\r\n    }\r\n    /**\r\n     * Open Lightbox Overlay\r\n     * @param i - Current Index\r\n     * @param id - Gallery ID\r\n     * @param config - Lightbox Config\r\n     */\r\n    open(i = 0, id = 'lightbox', config) {\r\n        const _config = config ? Object.assign(Object.assign({}, this._config), config) : this._config;\r\n        const overlayConfig = {\r\n            backdropClass: _config.backdropClass,\r\n            panelClass: _config.panelClass,\r\n            hasBackdrop: _config.hasBackdrop,\r\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\r\n            scrollStrategy: this._overlay.scrollStrategies.block(),\r\n            disposeOnNavigation: true\r\n        };\r\n        const galleryRef = this._gallery.ref(id);\r\n        galleryRef.set(i);\r\n        this._overlayRef = this._overlay.create(overlayConfig);\r\n        // overlay opened event\r\n        this._overlayRef.attachments().subscribe(() => this.opened.next(id));\r\n        // overlay closed event\r\n        this._overlayRef.detachments().subscribe(() => this.closed.next(id));\r\n        // Attach gallery to the overlay\r\n        const galleryPortal = new ComponentPortal(LightboxComponent);\r\n        const lightboxRef = this._overlayRef.attach(galleryPortal);\r\n        lightboxRef.instance.id = id;\r\n        lightboxRef.instance.overlayRef = this._overlayRef;\r\n        lightboxRef.instance.closeIcon = this._config.closeIcon;\r\n        lightboxRef.instance.role = this._config.role;\r\n        lightboxRef.instance.ariaLabel = this._config.ariaLabel;\r\n        lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\r\n        lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\r\n        lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\r\n        lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\r\n        if (_config.hasBackdrop) {\r\n            this._overlayRef.backdropClick().subscribe(() => this.close());\r\n        }\r\n        // Add keyboard shortcuts\r\n        if (_config.keyboardShortcuts) {\r\n            this._overlayRef.keydownEvents().subscribe((event) => {\r\n                switch (event.keyCode) {\r\n                    case LEFT_ARROW:\r\n                        galleryRef.prev();\r\n                        break;\r\n                    case RIGHT_ARROW:\r\n                        galleryRef.next();\r\n                        break;\r\n                    case ESCAPE:\r\n                        this.close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Close Lightbox Overlay\r\n     */\r\n    close() {\r\n        if (this._overlayRef.hasAttached()) {\r\n            this._overlayRef.detach();\r\n        }\r\n    }\r\n}\r\nLightbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Lightbox, deps: [{ token: LIGHTBOX_CONFIG, optional: true }, { token: i1$1.Gallery }, { token: i2$1.Overlay }], target: i0.ɵɵFactoryTarget.Injectable });\r\nLightbox.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Lightbox });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Lightbox, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [LIGHTBOX_CONFIG]\r\n                    }] }, { type: i1$1.Gallery }, { type: i2$1.Overlay }];\r\n    } });\n\nclass GallerizeDirective {\r\n    constructor(_zone, _el, _gallery, _lightbox, _renderer, platform, _document, _galleryCmp) {\r\n        this._zone = _zone;\r\n        this._el = _el;\r\n        this._gallery = _gallery;\r\n        this._lightbox = _lightbox;\r\n        this._renderer = _renderer;\r\n        this._document = _document;\r\n        this._galleryCmp = _galleryCmp;\r\n        /** Default gallery id */\r\n        this._galleryId = 'lightbox';\r\n        /** The selector used to query images elements */\r\n        this.selector = 'img';\r\n        // Set gallerize mode\r\n        if (isPlatformBrowser(platform)) {\r\n            this._mode = _galleryCmp ? \"gallery\" /* Gallery */ : \"detector\" /* Detector */;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this._zone.runOutsideAngular(() => {\r\n            this._galleryId = this.gallerize || this._galleryId;\r\n            const ref = this._gallery.ref(this._galleryId);\r\n            switch (this._mode) {\r\n                case \"detector\" /* Detector */:\r\n                    this.detectorMode(ref);\r\n                    break;\r\n                case \"gallery\" /* Gallery */:\r\n                    this.galleryMode(ref);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        switch (this._mode) {\r\n            case \"detector\" /* Detector */:\r\n                this._detector$.complete();\r\n                this._observer$.disconnect();\r\n                break;\r\n            case \"gallery\" /* Gallery */:\r\n                this._itemClick$.unsubscribe();\r\n                this._itemChange$.unsubscribe();\r\n        }\r\n    }\r\n    /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\r\n     * Adds a click event to each gallery item so it opens in lightbox */\r\n    galleryMode(galleryRef) {\r\n        // Clone its items to the new gallery instance\r\n        this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe((i) => this._lightbox.open(i, this._galleryId));\r\n        this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe((state) => galleryRef.load(state.items));\r\n    }\r\n    /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\r\n     *  Detects images and adds a click event to each image so it opens in the lightbox */\r\n    detectorMode(galleryRef) {\r\n        this._detector$ = new Subject();\r\n        // Query image elements\r\n        this._detector$.pipe(debounceTime(300), switchMap(() => {\r\n            /** get all img elements from content */\r\n            const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\r\n            if (imageElements && imageElements.length) {\r\n                const images = [];\r\n                return from(imageElements).pipe(map((el, i) => {\r\n                    // Add click event to the image\r\n                    this._renderer.setStyle(el, 'cursor', 'pointer');\r\n                    this._renderer.setProperty(el, 'onclick', () => this._zone.run(() => this._lightbox.open(i, this._galleryId)));\r\n                    if (el instanceof HTMLImageElement) {\r\n                        // If element is type of img use the src property\r\n                        return {\r\n                            src: el.getAttribute('imageSrc') || el.src,\r\n                            thumb: el.getAttribute('thumbSrc') || el.src\r\n                        };\r\n                    }\r\n                    else {\r\n                        // Otherwise, use element background-image url\r\n                        const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);\r\n                        const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\r\n                        return {\r\n                            src: el.getAttribute('imageSrc') || background,\r\n                            thumb: el.getAttribute('thumbSrc') || background\r\n                        };\r\n                    }\r\n                }), tap((data) => images.push(new ImageItem(data))), finalize(() => galleryRef.load(images)));\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        })).subscribe();\r\n        // Observe content changes\r\n        this._observer$ = new MutationObserver(() => this._detector$.next());\r\n        this._observer$.observe(this._el.nativeElement, { childList: true, subtree: true });\r\n    }\r\n}\r\nGallerizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: GallerizeDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1$1.Gallery }, { token: Lightbox }, { token: i0.Renderer2 }, { token: PLATFORM_ID }, { token: DOCUMENT }, { token: i1$1.GalleryComponent, host: true, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\r\nGallerizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: GallerizeDirective, selector: \"[gallerize]\", inputs: { gallerize: \"gallerize\", selector: \"selector\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: GallerizeDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[gallerize]'\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1$1.Gallery }, { type: Lightbox }, { type: i0.Renderer2 }, { type: Object, decorators: [{\r\n                        type: Inject,\r\n                        args: [PLATFORM_ID]\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: i1$1.GalleryComponent, decorators: [{\r\n                        type: Host\r\n                    }, {\r\n                        type: Self\r\n                    }, {\r\n                        type: Optional\r\n                    }] }];\r\n    }, propDecorators: { gallerize: [{\r\n                type: Input\r\n            }], selector: [{\r\n                type: Input\r\n            }] } });\n\nclass LightboxDirective {\r\n    constructor(_lightbox, _el, _renderer) {\r\n        this._lightbox = _lightbox;\r\n        this._el = _el;\r\n        this._renderer = _renderer;\r\n        this.clickEvent = Subscription.EMPTY;\r\n        this.index = 0;\r\n        this.id = 'root';\r\n    }\r\n    ngOnInit() {\r\n        this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\r\n        this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(tap(() => this._lightbox.open(this.index, this.id))).subscribe();\r\n    }\r\n    ngOnDestroy() {\r\n        this.clickEvent.unsubscribe();\r\n    }\r\n}\r\nLightboxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxDirective, deps: [{ token: Lightbox }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\nLightboxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: LightboxDirective, selector: \"[lightbox]\", inputs: { index: [\"lightbox\", \"index\"], id: [\"gallery\", \"id\"] }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[lightbox]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: Lightbox }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { index: [{\r\n                type: Input,\r\n                args: ['lightbox']\r\n            }], id: [{\r\n                type: Input,\r\n                args: ['gallery']\r\n            }] } });\n\nclass LightboxModule {\r\n    static withConfig(config) {\r\n        return {\r\n            ngModule: LightboxModule,\r\n            providers: [\r\n                {\r\n                    provide: LIGHTBOX_CONFIG,\r\n                    useValue: config\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\nLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, declarations: [LightboxComponent,\r\n        LightboxDirective,\r\n        GallerizeDirective], imports: [OverlayModule,\r\n        GalleryModule,\r\n        A11yModule], exports: [LightboxDirective,\r\n        GallerizeDirective] });\r\nLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, providers: [\r\n        Lightbox\r\n    ], imports: [[\r\n            OverlayModule,\r\n            GalleryModule,\r\n            A11yModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        OverlayModule,\r\n                        GalleryModule,\r\n                        A11yModule\r\n                    ],\r\n                    declarations: [\r\n                        LightboxComponent,\r\n                        LightboxDirective,\r\n                        GallerizeDirective\r\n                    ],\r\n                    exports: [\r\n                        LightboxDirective,\r\n                        GallerizeDirective\r\n                    ],\r\n                    providers: [\r\n                        Lightbox\r\n                    ]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { GallerizeDirective, LIGHTBOX_CONFIG, Lightbox, LightboxComponent, LightboxDirective, LightboxModule };\n"]},"metadata":{},"sourceType":"module"}