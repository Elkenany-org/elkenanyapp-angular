{"ast":null,"code":"import { catchError, EMPTY } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/@core/services/modules/gallery/gallary.service\";\nimport * as i2 from \"@angular/router\";\nexport let GalleriesResolver = /*#__PURE__*/(() => {\n  class GalleriesResolver {\n    constructor(gallery, router) {\n      this.gallery = gallery;\n      this.router = router;\n      this.filterData = {\n        sector: '',\n        countries: '',\n        cities: '',\n        sort: \"0\",\n        search: \"\",\n        page: ''\n      };\n    }\n\n    resolve(route, state) {\n      console.log(\"resolver is work \");\n      this.filterData['sector'] = route.paramMap.get('type') || '';\n      this.filterData['sort'] = route.queryParamMap.get('sort') || '0';\n      this.filterData['page'] = route.queryParamMap.get('page') || '1';\n      return this.gallery.galleries(this.filterData).pipe(catchError(() => {\n        this.router.navigate([\"\"]);\n        return EMPTY;\n      }));\n    }\n\n  }\n\n  GalleriesResolver.ɵfac = function GalleriesResolver_Factory(t) {\n    return new (t || GalleriesResolver)(i0.ɵɵinject(i1.GallaryService), i0.ɵɵinject(i2.Router));\n  };\n\n  GalleriesResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GalleriesResolver,\n    factory: GalleriesResolver.ɵfac,\n    providedIn: 'root'\n  });\n  return GalleriesResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}