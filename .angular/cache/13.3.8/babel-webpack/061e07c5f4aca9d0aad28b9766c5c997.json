{"ast":null,"code":"import { map } from 'rxjs';\nimport { environment as env } from '../../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HomeService = /*#__PURE__*/(() => {\n  class HomeService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    Home() {\n      return this.http.get(`${env.ApiUrl}/home-services`).pipe(map(res => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n        const data = {\n          logos: (_a = res.data) === null || _a === void 0 ? void 0 : _a.logos,\n          banner: (_b = res.data) === null || _b === void 0 ? void 0 : _b.banners,\n          services: (_c = res.data) === null || _c === void 0 ? void 0 : _c.services,\n          app: (_d = res.data) === null || _d === void 0 ? void 0 : _d.app,\n          cta: (_e = res.data) === null || _e === void 0 ? void 0 : _e.cta,\n          questions: (_f = res.data) === null || _f === void 0 ? void 0 : _f.questions,\n          howtouse: (_g = res.data) === null || _g === void 0 ? void 0 : _g.howtouse,\n          claim: (_h = res.data) === null || _h === void 0 ? void 0 : _h.claim,\n          most_visited: (_j = res.data) === null || _j === void 0 ? void 0 : _j.most_visited,\n          newest: (_k = res.data) === null || _k === void 0 ? void 0 : _k.newest\n        };\n        return data;\n      }));\n    }\n\n  }\n\n  HomeService.ɵfac = function HomeService_Factory(t) {\n    return new (t || HomeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HomeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeService,\n    factory: HomeService.ɵfac,\n    providedIn: 'root'\n  });\n  return HomeService;\n})();","map":null,"metadata":{},"sourceType":"module"}